{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
  "parameters": {
    "eventHubName": {
      "type": "string",
      "metadata": {
        "description": "Name of the Event Hub"
      }
    },
    "eventHubSendPrimaryKey": {
      "type": "string"
    },
    "eventHubSendSecondaryKey": {
      "type": "string"
    },
    "eventHubListenPrimaryKey": {
      "type": "string"
    },
    "eventHubListenSecondaryKey": {
      "type": "string"
    }
  },
  "variables": {
    "eventHubNamespace": "[concat('eventHub',uniqueString(resourceGroup().id))]",
    "location": "[resourceGroup().location]",
    "sbListenOnlyKeyName": "ListenOnlyKey",
    "ehVersion": "2014-09-01",
    "defaultSASKeyName": "RootManageSharedAccessKey",
    "authRuleResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('eventHubNamespace'), variables('defaultSASKeyName'))]",
    "sendAuthRuleResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('eventHubNamespace'), 'SendOnlyKey')]",
    "listenAuthRuleResourceId": "[resourceId('Microsoft.Eventhub/namespaces/authorizationRules', variables('eventHubNamespace'), 'ListenOnlyKey')]"
  },
  "resources": [
    {
      "apiVersion": "[variables('ehVersion')]",
      "name": "[variables('eventHubNamespace')]",
      "type": "Microsoft.EventHub/namespaces",
      "location": "[variables('location')]",
      "resources": [
        {
          "apiVersion": "[variables('ehVersion')]",
          "name": "[parameters('eventHubName')]",
          "type": "eventHubs",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubNamespace'))]"
          ],
          "properties": {
            "path": "[parameters('eventHubName')]"
          }
        },
        {
          "apiVersion": "[variables('ehVersion')]",
          "name": "[concat(variables('eventHubNamespace'),'/SendOnlyKey')]",
          "type": "Microsoft.EventHub/namespaces/authorizationRules",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubNamespace'))]"
          ],
          "location": "[variables('location')]",
          "properties": {
            "KeyName": "SendOnlyKey",
            "ClaimType": "SendSharedAccessKey",
            "ClaimValue": "None",
            "PrimaryKey": "[parameters('eventHubSendPrimaryKey')]",
            "SecondaryKey": "[parameters('eventHubSendSecondaryKey')]",
            "Rights": [ "Send" ],
            "Revision": -1
          }
        },
        {
          "apiVersion": "[variables('ehVersion')]",
          "name": "[concat(variables('eventHubNamespace'),'/',variables('sbListenOnlyKeyName'))]",
          "type": "Microsoft.EventHub/namespaces/authorizationRules",
          "dependsOn": [
            "[concat('Microsoft.EventHub/namespaces/', variables('eventHubNamespace'))]"
          ],
          "location": "[variables('location')]",
          "properties": {
            "KeyName": "ListenOnlyKey",
            "ClaimType": "ReceiveSharedAccessKey",
            "ClaimValue": "None",
            "PrimaryKey": "[parameters('eventHubListenPrimaryKey')]",
            "SecondaryKey": "[parameters('eventHubListenSecondaryKey')]",
            "Rights": [ "Listen" ],
            "Revision": -1
          }
        }
      ]
    }
  ],
  "outputs": {
    "NamespaceDefaultConnectionString": {
      "type": "string",
      "value": "[listkeys(variables('authRuleResourceId'), variables('ehVersion')).primaryConnectionString]"
    },
    "SendOnlyConnectionString": {
      "type": "string",
      "value": "[listkeys(variables('sendAuthRuleResourceId'), variables('ehVersion')).primaryConnectionString]"
    },
    "ReceiveOnlyConnectionString": {
      "type": "string",
      "value": "[listkeys(variables('listenAuthRuleResourceId'), variables('ehVersion')).primaryConnectionString]"
    }
  }
}